# Copyright (c) 2023 Huawei Technologies Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/gn/fangtian.gni")
import("///ace_engine/ft_build/ace_config.gni")

template("fangtian_entrance_source") {
  forward_variables_from(invoker, "*")

  ft_source_set(target_name) {
    defines += invoker.defines
    cflags_cc += invoker.cflags_cc
    cflags_cc += [
      "-Wno-unused-const-variable", 
      "-Wno-unused-function", 
      "-Wno-unused-lambda-capture",
    ]
    configs = [ "$ace_root/ft_build:ace_config" ]

    sources = [
      "ace_new_pipe_judgement.cpp",
      "ace_ability.cpp",
      "ace_application_info.cpp",
      "ace_container.cpp",
      "ace_resource_register.cpp",
      "clipboard/clipboard_impl.cpp",
      "clipboard/clipboard_proxy_impl.cpp",
      "editing/text_input_client_mgr.cpp",
      "editing/text_input_connection_impl.cpp",
      "editing/text_input_impl.cpp",
      "event_dispatcher.cpp",
      "flutter_ace_view.cpp",
      "subwindow_preview.cpp",
    ]

    deps = [
      "$ace_root/frameworks/core/components/theme/ft_build:build_theme_code",
    ]

    if (defined(config.enable_rosen_backend) && config.enable_rosen_backend) {
      sources -= [ "flutter_ace_view.cpp" ]
      sources += [ "rs_ace_view.cpp" ]
    }

    if (is_fangtian_build) {
      public_deps = [
        "$ace_flutter_engine_root/glfw:flutter_glfw_$platform",
        "$ace_flutter_engine_root/skia:ace_skia_$platform",
        "//resource_management/frameworks/resmgr/ft_build:global_resmgr_linux",
      ]
    }
  }
}

foreach(item, ace_platforms) {
  platform = item.name
  if (platform == "fangtian") {
    fangtian_entrance_source("ace_entrance_" + item.name) {
      platform = item.name
      defines = []
      cflags_cc = []
      config = {
      }

      if (defined(item.config)) {
        config = item.config
      }

      if (defined(config.defines)) {
        defines = config.defines
      }

      if (defined(config.cflags_cc)) {
        cflags_cc = config.cflags_cc
      }
    }
  }
}
