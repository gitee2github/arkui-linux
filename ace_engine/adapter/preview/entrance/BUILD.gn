# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

ohos_source_set("preview_entrance_source") {
  subsystem_name = ace_engine_subsystem
  part_name = ace_engine_part
  if (defined(current_platform.name)) {
    platform = current_platform.name
    defines = []
    cflags_cc = []
    config = {
    }
    if (defined(current_platform.config)) {
      config = current_platform.config
    }
    if (defined(config.defines)) {
      defines += config.defines
    }
    if (defined(config.cflags_cc)) {
      cflags_cc += config.cflags_cc
    }
    configs = [ "$ace_root:ace_config" ]

    # set icu_data_path for ark preview
    defines += [ "INIT_ICU_DATA_PATH" ]

    sources = [
      "$ace_root/adapter/ohos/entrance/ace_new_pipe_judgement.cpp",
      "ace_ability.cpp",
      "ace_application_info.cpp",
      "ace_container.cpp",
      "ace_resource_register.cpp",
      "clipboard/clipboard_impl.cpp",
      "clipboard/clipboard_proxy_impl.cpp",
      "editing/text_input_client_mgr.cpp",
      "editing/text_input_connection_impl.cpp",
      "editing/text_input_impl.cpp",
      "event_dispatcher.cpp",
      "flutter_ace_view.cpp",
      "subwindow_preview.cpp",
    ]

    deps = [
      "$ace_flutter_engine_root/glfw:flutter_glfw_preview_$platform",
      "$ace_flutter_engine_root/skia:ace_skia_$platform",
      "$ace_napi:ace_napi",
      "$ace_root/frameworks/core/components/theme:build_theme_code",
    ]

    if (defined(config.enable_rosen_backend) && config.enable_rosen_backend) {
      sources -= [ "flutter_ace_view.cpp" ]
      sources += [ "rs_ace_view.cpp" ]
      deps += [ "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client" ]
    }

    if (!is_cross_platform_build) {
      if (platform == "windows") {
        defines -= [ "UNICODE" ]
        deps += [ "//base/global/resource_management/frameworks/resmgr:global_resmgr_win" ]
        cflags_cc += [ "-DNONLS" ]
      }

      if (platform == "mac") {
        deps += [ "//base/global/resource_management/frameworks/resmgr:global_resmgr_mac" ]
      }

      if (platform == "linux") {
        deps += [ "//base/global/resource_management/frameworks/resmgr:global_resmgr_linux" ]
      }
    }
  }
}
