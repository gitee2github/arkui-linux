# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")
import(
    "//foundation/arkui/ace_engine/frameworks/core/components_ng/components.gni")

ohos_unittest("panel_option_test_ng") {
  module_out_path = "$test_output_path/render"

  include_dirs = [
    "//third_party/flutter/skia/src",
    "//third_party/bounds_checking_function/include",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/include",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/include/draw",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src/drawing",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src/drawing/engine_adapter",
  ]

  sources = [
    # inner
    "$ace_root/adapter/ohos/osal/log_wrapper.cpp",
    "$ace_root/adapter/preview/osal/frame_trace_adapter_impl.cpp",
    "$ace_root/frameworks/base/geometry/animatable_dimension.cpp",
    "$ace_root/frameworks/base/geometry/dimension.cpp",
    "$ace_root/frameworks/base/json/json_util.cpp",
    "$ace_root/frameworks/base/log/dump_log.cpp",
    "$ace_root/frameworks/base/memory/memory_monitor.cpp",
    "$ace_root/frameworks/base/thread/background_task_executor.cpp",
    "$ace_root/frameworks/base/utils/base_id.cpp",
    "$ace_root/frameworks/base/utils/string_expression.cpp",
    "$ace_root/frameworks/core/animation/animator.cpp",
    "$ace_root/frameworks/core/animation/anticipate_curve.cpp",
    "$ace_root/frameworks/core/animation/cubic_curve.cpp",
    "$ace_root/frameworks/core/animation/curves.cpp",
    "$ace_root/frameworks/core/animation/scheduler.cpp",
    "$ace_root/frameworks/core/common/ace_engine.cpp",
    "$ace_root/frameworks/core/common/anr_thread.cpp",
    "$ace_root/frameworks/core/common/container.cpp",
    "$ace_root/frameworks/core/common/container_scope.cpp",
    "$ace_root/frameworks/core/common/watch_dog.cpp",
    "$ace_root/frameworks/core/components/common/layout/grid_column_info.cpp",
    "$ace_root/frameworks/core/components/common/layout/grid_container_info.cpp",
    "$ace_root/frameworks/core/components/common/layout/grid_system_manager.cpp",
    "$ace_root/frameworks/core/components/common/properties/alignment.cpp",
    "$ace_root/frameworks/core/components/common/properties/border_image.cpp",
    "$ace_root/frameworks/core/components/common/properties/border_image_edge.cpp",
    "$ace_root/frameworks/core/components/common/properties/color.cpp",
    "$ace_root/frameworks/core/components/common/properties/decoration.cpp",
    "$ace_root/frameworks/core/components/test/unittest/mock/ace_trace_mock.cpp",
    "$ace_root/frameworks/core/components_ng/layout/box_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_property.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_wrapper_builder.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/grid_container/grid_container_layout_property.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/option/option_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/property/calc_length.cpp",
    "$ace_root/frameworks/core/components_ng/property/grid_property.cpp",
    "$ace_root/frameworks/core/components_ng/property/measure_utils.cpp",
    "$ace_root/frameworks/core/components_ng/property/property.cpp",
    "$ace_root/frameworks/core/components_ng/render/adapter/skia_decoration_painter.cpp",
    "$ace_root/frameworks/core/components_ng/render/border_image_painter.cpp",
    "$ace_root/frameworks/core/components_ng/render/render_context.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/base/mock_frame_node.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/layout/mock_layout_wrapper.cpp",
    "$ace_root/frameworks/core/components_v2/inspector/inspector_constants.cpp",
    "$ace_root/frameworks/core/image/flutter_image_cache.cpp",
    "$ace_root/frameworks/core/image/image_cache.cpp",

    # mock
    "$ace_root/frameworks/base/test/mock/mock_system_properties.cpp",
    "$ace_root/frameworks/core/pipeline/pipeline_base.cpp",
    "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_pipeline_context.cpp",

    # self
    "panel_option_test_ng.cpp",
  ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  deps = [
    "$ace_flutter_engine_root:third_party_flutter_engine_ohos",
    "$ace_flutter_engine_root/skia:ace_skia_ohos",
    "$cjson_root:cjson_static",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics:2d_graphics",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client",
    "//third_party/googletest:gmock_main",
  ]

  configs = [
    "$ace_root:ace_test_coverage_config",
    "$ace_root:ace_test_config",
    "$ace_root:ace_config",
    "$ace_flutter_engine_root:flutter_config",
    "$ace_flutter_engine_root/skia:skia_config",
    "//commonlibrary/c_utils/base:utils_config",
    "//foundation/graphic/graphic_2d/utils/buffer_handle:buffer_handle_public_config",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base:export_config",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_engine/rosen_text:rosen_text_config",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:render_service_client_config",
  ]
}
