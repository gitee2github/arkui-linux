# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")
import(
    "//foundation/arkui/ace_engine/frameworks/core/components_ng/components.gni")

common_sources = [
  # inner
  "$ace_root/frameworks/base/geometry/dimension.cpp",
  "$ace_root/frameworks/base/json/json_util.cpp",
  "$ace_root/frameworks/base/log/dump_log.cpp",
  "$ace_root/frameworks/base/utils/base_id.cpp",
  "$ace_root/frameworks/base/utils/string_expression.cpp",
  "$ace_root/frameworks/base/utils/string_utils.cpp",
  "$ace_root/frameworks/core/animation/anticipate_curve.cpp",
  "$ace_root/frameworks/core/animation/bilateral_spring_adapter.cpp",
  "$ace_root/frameworks/core/animation/bilateral_spring_node.cpp",
  "$ace_root/frameworks/core/animation/cubic_curve.cpp",
  "$ace_root/frameworks/core/animation/curves.cpp",
  "$ace_root/frameworks/core/animation/simple_spring_adapter.cpp",
  "$ace_root/frameworks/core/animation/simple_spring_chain.cpp",
  "$ace_root/frameworks/core/animation/simple_spring_node.cpp",
  "$ace_root/frameworks/core/animation/spring_model.cpp",
  "$ace_root/frameworks/core/animation/spring_motion.cpp",
  "$ace_root/frameworks/core/components/common/layout/grid_column_info.cpp",
  "$ace_root/frameworks/core/components/common/layout/grid_container_info.cpp",
  "$ace_root/frameworks/core/components/common/layout/grid_system_manager.cpp",
  "$ace_root/frameworks/core/components/common/properties/alignment.cpp",
  "$ace_root/frameworks/core/components/common/properties/color.cpp",
  "$ace_root/frameworks/core/components_v2/inspector/inspector_constants.cpp",
  "$ace_root/frameworks/core/pipeline/base/constants.cpp",

  # components_ng_base
  "$ace_root/frameworks/core/components_ng/base/frame_node.cpp",
  "$ace_root/frameworks/core/components_ng/base/geometry_node.cpp",
  "$ace_root/frameworks/core/components_ng/base/inspector.cpp",
  "$ace_root/frameworks/core/components_ng/base/ui_node.cpp",
  "$ace_root/frameworks/core/components_ng/base/view_stack_processor.cpp",

  # components_ng_render
  "$ace_root/frameworks/core/components_ng/render/divider_painter.cpp",
  "$ace_root/frameworks/core/components_ng/render/paint_wrapper.cpp",

  # components_ng_layout
  "$ace_root/frameworks/core/components_ng/layout/box_layout_algorithm.cpp",
  "$ace_root/frameworks/core/components_ng/layout/layout_property.cpp",
  "$ace_root/frameworks/core/components_ng/layout/layout_wrapper.cpp",
  "$ace_root/frameworks/core/components_ng/layout/layout_wrapper_builder.cpp",

  # components_ng_property
  "$ace_root/frameworks/core/components_ng/property/calc_length.cpp",
  "$ace_root/frameworks/core/components_ng/property/grid_property.cpp",
  "$ace_root/frameworks/core/components_ng/property/measure_utils.cpp",
  "$ace_root/frameworks/core/components_ng/property/property.cpp",

  # components_ng_pattern
  "$ace_root/frameworks/core/components_ng/pattern/grid_container/grid_container_layout_property.cpp",

  # components_ng_syntax
  "$ace_root/frameworks/core/components_ng/syntax/for_each_node.cpp",

  # components_ng_event
  "$ace_root/frameworks/core/components_ng/event/event_hub.cpp",
  "$ace_root/frameworks/core/components_ng/event/focus_hub.cpp",
  "$ace_root/frameworks/core/components_ng/event/gesture_event_hub.cpp",
  "$ace_root/frameworks/core/components_ng/event/input_event.cpp",
  "$ace_root/frameworks/core/components_ng/event/input_event_hub.cpp",
  "$ace_root/frameworks/core/components_ng/event/state_style_manager.cpp",

  # components_ng_gestures
  "$ace_root/frameworks/core/components_ng/gestures/gesture_referee.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/exclusive_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/gesture_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/pan_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/parallel_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/recognizer_group.cpp",

  # mock
  "$ace_root/frameworks/base/test/mock/mock_animatable_dimension.cpp",
  "$ace_root/frameworks/base/test/mock/mock_system_properties.cpp",
  "$ace_root/frameworks/core/animation/test/mock/mock_animator.cpp",
  "$ace_root/frameworks/core/animation/test/mock/mock_scheduler.cpp",
  "$ace_root/frameworks/core/common/test/mock/mock_ace_application_info.cpp",
  "$ace_root/frameworks/core/common/test/mock/mock_container.cpp",
  "$ace_root/frameworks/core/components_ng/test/event/mock/mock_drag_event.cpp",
  "$ace_root/frameworks/core/components_ng/test/event/mock/mock_long_press_event.cpp",
  "$ace_root/frameworks/core/components_ng/test/event/mock/mock_pan_event.cpp",
  "$ace_root/frameworks/core/components_ng/test/event/mock/mock_scrollable_event.cpp",
  "$ace_root/frameworks/core/components_ng/test/event/mock/mock_touch_event.cpp",
  "$ace_root/frameworks/core/components_ng/test/event/scrollable_event/mock_scrollable.cpp",
  "$ace_root/frameworks/core/components_ng/test/mock/image_provider/mock_image_source_info.cpp",
  "$ace_root/frameworks/core/components_ng/test/mock/manager/drag_drop/mock_drag_drop_proxy.cpp",
  "$ace_root/frameworks/core/components_ng/test/mock/pattern/grid/mock_grid_pattern.cpp",
  "$ace_root/frameworks/core/components_ng/test/mock/pattern/scroll/mock_scroll_bar_painter.cpp",
  "$ace_root/frameworks/core/components_ng/test/mock/pattern/scroll/mock_scroll_fade_painter.cpp",
  "$ace_root/frameworks/core/components_ng/test/mock/render/mock_animation_utils.cpp",
  "$ace_root/frameworks/core/components_ng/test/mock/render/mock_drawing_convertor.cpp",
  "$ace_root/frameworks/core/components_ng/test/mock/render/mock_modifier_adapter.cpp",
  "$ace_root/frameworks/core/components_ng/test/mock/render/mock_render_context.cpp",
  "$ace_root/frameworks/core/components_ng/test/mock/render/mock_render_context_creator.cpp",
  "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_element_register.cpp",
  "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_pipeline_base.cpp",
  "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_pipeline_context.cpp",
  "$ace_root/frameworks/core/pipeline_ng/test/unittest/mock_drag_drop_manager.cpp",

  # scroll
  "$ace_root/frameworks/core/components_ng/pattern/scroll/effect/scroll_fade_controller.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/scroll/effect/scroll_fade_effect.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/scroll/inner/scroll_bar.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/scroll/scroll_spring_effect.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/scroll_bar/proxy/scroll_bar_proxy.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/scroll_bar/scroll_bar_layout_algorithm.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/scroll_bar/scroll_bar_pattern.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/scroll_bar/scroll_bar_view.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/scrollable/scrollable_paint_property.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/scrollable/scrollable_pattern.cpp",

  # linear_layout
  "$ace_root/frameworks/core/components_ng/pattern/flex/flex_layout_algorithm.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/linear_layout/column_model_ng.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/linear_layout/linear_layout_utils.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/linear_layout/row_model_ng.cpp",

  # self
  "$ace_root/frameworks/core/components_ng/pattern/list/list_event_hub.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_item_event_hub.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_item_group_layout_algorithm.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_item_group_model_ng.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_item_group_paint_method.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_item_group_pattern.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_item_layout_algorithm.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_item_layout_property.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_item_model_ng.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_item_pattern.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_lanes_layout_algorithm.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_layout_algorithm.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_layout_property.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_model_ng.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_paint_method.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_pattern.cpp",
  "$ace_root/frameworks/core/components_ng/pattern/list/list_position_controller.cpp",
]

ohos_unittest("list_pattern_test_ng") {
  module_out_path = "$test_output_path/list"

  test_sources = [ "list_pattern_test_ng.cpp" ]

  sources = test_sources + common_sources

  deps = [
    "$ace_root:ace_test_log",
    "$cjson_root:cjson_static",
    "//third_party/googletest:gmock_main",
  ]

  configs = [
    "$ace_root:ace_unittest_config",
    "$ace_root:ace_test_coverage_config",
  ]
}

ohos_unittest("list_test_ng") {
  module_out_path = "$test_output_path/list"

  test_sources = [ "list_test_ng.cpp" ]

  sources = common_sources + test_sources

  deps = [
    "$ace_root:ace_test_log",
    "$cjson_root:cjson_static",
    "//third_party/googletest:gmock_main",
  ]

  configs = [
    "$ace_root:ace_unittest_config",
    "$ace_root:ace_test_coverage_config",
  ]
}
