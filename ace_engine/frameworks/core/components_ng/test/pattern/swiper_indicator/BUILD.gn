# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")
import(
    "//foundation/arkui/ace_engine/frameworks/core/components_ng/components.gni")

ohos_unittest("swiper_indicator_pattern_test_ng") {
  platform = "ohos"
  module_out_path = "$test_output_path/swiper_indicator"

  sources = [
    # inner
    "$ace_root/frameworks/base/geometry/dimension.cpp",
    "$ace_root/frameworks/base/json/json_util.cpp",
    "$ace_root/frameworks/base/log/dump_log.cpp",
    "$ace_root/frameworks/base/utils/string_expression.cpp",
    "$ace_root/frameworks/base/utils/string_utils.cpp",
    "$ace_root/frameworks/core/components/common/layout/grid_column_info.cpp",
    "$ace_root/frameworks/core/components/common/layout/grid_container_info.cpp",
    "$ace_root/frameworks/core/components/common/layout/grid_system_manager.cpp",
    "$ace_root/frameworks/core/components/common/properties/alignment.cpp",
    "$ace_root/frameworks/core/components/common/properties/color.cpp",
    "$ace_root/frameworks/core/components_v2/inspector/inspector_constants.cpp",
    "$ace_root/frameworks/core/pipeline/base/constants.cpp",

    # animation
    "$ace_root/frameworks/base/utils/base_id.cpp",
    "$ace_root/frameworks/core/animation/animatable_data.cpp",
    "$ace_root/frameworks/core/animation/animatable_properties.cpp",
    "$ace_root/frameworks/core/animation/anticipate_curve.cpp",
    "$ace_root/frameworks/core/animation/cubic_curve.cpp",
    "$ace_root/frameworks/core/animation/curves.cpp",
    "$ace_root/frameworks/core/animation/friction_motion.cpp",
    "$ace_root/frameworks/core/animation/property_animation.cpp",
    "$ace_root/frameworks/core/animation/scheduler.cpp",
    "$ace_root/frameworks/core/animation/scroll_motion.cpp",
    "$ace_root/frameworks/core/animation/spring_model.cpp",
    "$ace_root/frameworks/core/animation/spring_motion.cpp",

    # components_ng_base
    "$ace_root/frameworks/core/components_ng/base/frame_node.cpp",
    "$ace_root/frameworks/core/components_ng/base/geometry_node.cpp",
    "$ace_root/frameworks/core/components_ng/base/ui_node.cpp",
    "$ace_root/frameworks/core/components_ng/base/view_stack_processor.cpp",

    # components_ng_layout
    "$ace_root/frameworks/core/components_ng/layout/box_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_property.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_wrapper.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_wrapper_builder.cpp",

    # components_ng_property
    "$ace_root/frameworks/core/components_ng/property/calc_length.cpp",
    "$ace_root/frameworks/core/components_ng/property/grid_property.cpp",
    "$ace_root/frameworks/core/components_ng/property/measure_utils.cpp",
    "$ace_root/frameworks/core/components_ng/property/property.cpp",

    # components_ng_pattern
    "$ace_root/frameworks/core/components_ng/pattern/grid_container/grid_container_layout_property.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/stage/page_event_hub.cpp",

    # components_ng_render
    "$ace_root/frameworks/core/components_ng/render/paint_wrapper.cpp",

    # components_ng_syntax
    "$ace_root/frameworks/core/components_ng/syntax/for_each_node.cpp",

    # components_ng_event
    "$ace_root/frameworks/core/components_ng/event/event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/focus_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/gesture_event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/input_event.cpp",
    "$ace_root/frameworks/core/components_ng/event/input_event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/state_style_manager.cpp",
    "$ace_root/frameworks/core/components_ng/event/touch_event.cpp",

    # components_ng_gestures
    "$ace_root/frameworks/core/components_ng/gestures/gesture_referee.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/click_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/exclusive_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/gesture_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/multi_fingers_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/parallel_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/recognizer_group.cpp",

    # mock
    "$ace_root/frameworks/base/test/mock/mock_system_properties.cpp",
    "$ace_root/frameworks/base/test/mock/ressched/mock_ressched_report.cpp",
    "$ace_root/frameworks/core/animation/test/mock/mock_animator.cpp",
    "$ace_root/frameworks/core/common/test/mock/mock_ace_application_info.cpp",
    "$ace_root/frameworks/core/common/test/mock/mock_container.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_click_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_pan_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/base/mock_stage_manager.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_animation_utils.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_drawing_convertor.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_modifier_adapter.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_render_context.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_render_context_creator.cpp",
    "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_element_register.cpp",
    "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_pipeline_base.cpp",
    "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_pipeline_context.cpp",

    # self
    "$ace_root/frameworks/core/components_ng/pattern/swiper/swiper_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper/swiper_model_ng.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper/swiper_paint_method.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper/swiper_paint_property.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper/swiper_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper_indicator/swiper_indicator_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper_indicator/swiper_indicator_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper_indicator/swiper_indicator_paint_method.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper_indicator/swiper_indicator_pattern.cpp",
    "swiper_indicator_pattern_test_ng.cpp",
  ]

  deps = [
    "$ace_root:ace_test_log",
    "$cjson_root:cjson_static",
    "//third_party/googletest:gmock_main",
  ]

  if (enable_ng_build) {
    deps += [
      "$ace_flutter_engine_root_new:third_party_flutter_engine_dev_ohos",
      "$ace_flutter_engine_root_new/third_party/skia:ace_skia_dev_ohos",
    ]
  } else {
    deps += [
      "$ace_flutter_engine_root:third_party_flutter_engine_ohos",
      "$ace_flutter_engine_root/skia:ace_skia_ohos",
    ]
  }

  if (platform == "ohos") {
    deps += [
      "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics:2d_graphics",
    ]
  } else {
    deps += [ "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics:2d_graphics_source_$platform" ]
  }

  configs = [
    ":config_swiper_indicator_test",
    "$ace_root:ace_config",
    "$ace_root:ace_test_coverage_config",
  ]
}

config("config_swiper_indicator_test") {
  visibility = [ ":*" ]
  include_dirs = [
    "//commonlibrary/c_utils/base/include",
    "$ace_root",
    "$ace_root/frameworks",
    "$flutter_root/skia",
    "$flutter_root/skia/include/core",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_engine",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_engine/rosen_text",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/include",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src/drawing/engine_adapter",
  ]
}
