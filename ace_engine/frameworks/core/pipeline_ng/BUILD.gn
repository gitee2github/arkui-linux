# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

# build core sources
template("ace_core_pipeline_ng_source_set") {
  forward_variables_from(invoker, "*")

  source_set(target_name) {
    defines += invoker.defines

    # add common source file needed by all product platform here
    sources = [
      # context
      "pipeline_context.cpp",

      # ui scheduler
      "ui_task_scheduler.cpp",
    ]

    configs += [ "$ace_root:ace_config" ]

    deps = [ "$ace_root/frameworks/core/components/theme:build_theme_code" ]

    if (enable_ng_build) {
      deps += [
        "$ace_flutter_engine_root_new:third_party_flutter_engine_dev_$platform",
        "$ace_flutter_engine_root_new/third_party/skia:ace_skia_dev_$platform",
      ]
    } else {
      deps += [
        "$ace_flutter_engine_root:third_party_flutter_engine_$platform",
        "$ace_flutter_engine_root/skia:ace_skia_$platform",
      ]
    }

    if (defined(config.enable_rosen_backend) && config.enable_rosen_backend) {
      deps += [ "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client" ]
      deps += [ "$ace_root/frameworks/core/components_ng/render:ace_core_components_render_ng_$platform" ]
      include_dirs =
          [ "//foundation/window/window_manager/interfaces/innerkits" ]
    }

    if (platform == "ohos" && defined(config.enable_native_view) &&
        config.enable_native_view) {
      sources += [ "layers/ace_scene_builder.cpp" ]
      deps += [ "$ace_flutter_engine_root/ohos_layers:flutter_ohos_layers" ]
    }

    cflags_cc = []
    cflags_cc += invoker.cflags_cc
  }
}

foreach(item, ace_platforms) {
  ace_core_pipeline_ng_source_set("ace_core_pipeline_ng_" + item.name) {
    platform = item.name

    if (defined(item.config)) {
      config = item.config
    } else {
      config = {
      }
    }

    if (defined(config.defines)) {
      defines = config.defines
    } else {
      defines = []
    }

    if (defined(config.cflags_cc)) {
      cflags_cc = config.cflags_cc
    } else {
      cflags_cc = []
    }
  }
}
