function add(a:number, b:number):number
{
    return a + b;
}

var r = 0;
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);
r += add(1, 2);