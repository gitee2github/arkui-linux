# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/ets_runtime/js_runtime_config.gni")
import("//arkcompiler/ets_runtime/test/test_helper.gni")

module_output_path = "arkcompiler/ets_runtime"

host_unittest_action("EcmaVm_001_Test") {
  module_out_path = module_output_path

  sources = [
    # test file
    "accessor_data_test.cpp",
    "assert_scope_test.cpp",
    "builtins_test.cpp",
    "byte_array_test.cpp",
    "concurrent_marking_test.cpp",
    "concurrent_sweep_test.cpp",
    "dump_test.cpp",

    # "ecma_string_test.cpp",
    "ecma_string_accessor_test.cpp",
    "ecma_string_table_test.cpp",
    "ecma_vm_test.cpp",
    "gc_test.cpp",
    "global_dictionary_test.cpp",
    "glue_regs_test.cpp",
    "handle_leak_test.cpp",
    "huge_object_test.cpp",
    "js_api_arraylist_iterator_test.cpp",
    "js_api_arraylist_test.cpp",
    "js_api_deque_iterator_test.cpp",
    "js_api_deque_test.cpp",
    "js_api_hashmap_iterator_test.cpp",
    "js_api_hashmap_test.cpp",
    "js_api_hashset_iterator_test.cpp",
    "js_api_hashset_test.cpp",
    "js_api_lightweightmap_iterator_test.cpp",
    "js_api_lightweightmap_test.cpp",
    "js_api_lightweightset_iterator_test.cpp",
    "js_api_lightweightset_test.cpp",
    "js_api_linked_list_iterator_test.cpp",
    "js_api_linked_list_test.cpp",
    "js_api_list_iterator_test.cpp",
    "js_api_list_test.cpp",
    "js_api_plain_array_iterator_test.cpp",
    "js_api_plain_array_test.cpp",
    "js_api_queue_iterator_test.cpp",
    "js_api_queue_test.cpp",
    "js_api_stack_iterator_test.cpp",
    "js_api_stack_test.cpp",
    "js_api_tree_map_iterator_test.cpp",
    "js_api_tree_map_test.cpp",
    "js_api_tree_set_iterator_test.cpp",
    "js_api_tree_set_test.cpp",
    "js_api_vector_iterator_test.cpp",
    "js_api_vector_test.cpp",
    "js_arguments_test.cpp",
    "js_array_buffer_test.cpp",
    "js_array_iterator_test.cpp",
    "js_array_test.cpp",
    "js_async_function_test.cpp",
    "js_bigint_test.cpp",
    "throw_oom_error_test.cpp",
  ]

  configs = [
    "//arkcompiler/ets_runtime:ecma_test_config",
    "$ark_root/assembler:arkassembler_public_config",
    "$ark_root/libpandafile:arkfile_public_config",
  ]

  deps = [
    "//arkcompiler/ets_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  ldflags = [ "-Wl,--lto-O0" ]
}

host_unittest_action("EcmaVm_002_Test") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_async_generator_object_test.cpp",
    "js_collator_test.cpp",
    "js_dataview_test.cpp",
    "js_date_test.cpp",
    "js_date_time_format_test.cpp",
    "js_displaynames_test.cpp",
    "js_finalization_registry_test.cpp",
    "js_forin_iterator_test.cpp",
    "js_function_test.cpp",
    "js_generator_object_test.cpp",
    "js_handle_test.cpp",
    "js_hclass_test.cpp",
    "js_iterator_test.cpp",
    "js_list_format_test.cpp",
    "js_locale_test.cpp",
    "js_map_iterator_test.cpp",
    "js_map_test.cpp",
    "js_number_format_test.cpp",
    "js_object_test.cpp",
    "js_plural_rules_test.cpp",
    "js_primitive_ref_test.cpp",
    "js_promise_test.cpp",
    "js_proxy_test.cpp",
    "js_regexp_iterator_test.cpp",
    "js_relative_time_format_test.cpp",
  ]

  configs = [
    "//arkcompiler/ets_runtime:ecma_test_config",
    "//arkcompiler/ets_runtime:icu_path_test_config",
  ]

  deps = [
    "$ark_third_party_root/icu/icu4c:shared_icui18n",
    "$ark_third_party_root/icu/icu4c:shared_icuuc",
    "//arkcompiler/ets_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  ldflags = [ "-Wl,--lto-O0" ]
}

host_unittest_action("EcmaVm_003_Test") {
  module_out_path = module_output_path

  sources = [
    # test file
    "js_serializer_test.cpp",
    "js_set_iterator_test.cpp",
    "js_set_test.cpp",
    "js_stable_array_test.cpp",
    "js_symbol_test.cpp",
    "js_tagged_number_test.cpp",
    "js_tagged_queue_test.cpp",
    "js_typed_array_test.cpp",
    "js_verification_test.cpp",
    "layout_info_test.cpp",
    "lexical_env_test.cpp",
    "linked_hash_table_test.cpp",
    "linked_node_test.cpp",
    "mem_controller_test.cpp",
    "native_pointer_test.cpp",
    "object_factory_test.cpp",
    "object_operator_test.cpp",
    "rb_tree_node_test.cpp",
    "read_only_space_test.cpp",
    "symbol_table_test.cpp",
    "tagged_array_test.cpp",
    "tagged_dictionary_test.cpp",
    "tagged_hash_array_test.cpp",
    "tagged_tree_test.cpp",
    "tagged_value_test.cpp",
    "template_map_test.cpp",
    "template_string_test.cpp",
    "transitions_dictionary_test.cpp",
    "waiter_list_test.cpp",
    "weak_ref_old_gc_test.cpp",
    "weak_ref_semi_gc_test.cpp",
    "weak_vector_test.cpp",
  ]

  configs = [ "//arkcompiler/ets_runtime:ecma_test_config" ]

  deps = [
    "//arkcompiler/ets_runtime:libark_jsruntime_test",
    sdk_libc_secshared_dep,
  ]

  ldflags = [ "-Wl,--lto-O0" ]
}

group("unittest") {
  testonly = true

  # deps file
  deps = [
    ":EcmaVm_001_Test",
    ":EcmaVm_002_Test",
    ":EcmaVm_003_Test",
  ]
}

group("host_unittest") {
  testonly = true

  # deps file
  deps = [
    ":EcmaVm_001_TestAction",
    ":EcmaVm_002_TestAction",
    ":EcmaVm_003_TestAction",
  ]
}
